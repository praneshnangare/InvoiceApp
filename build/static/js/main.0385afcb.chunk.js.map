{"version":3,"sources":["helpers/constants.js","features/createInvoice/sheetsFunctions.js","helpers/helper.js","features/createInvoice/useSheets.js","features/login/useAuth.js","components/MenuList.jsx","components/Menu.jsx","components/MainLayout.jsx","schemas/invoiceValidation.js","features/createInvoice/InvoiceForm.jsx","features/login/LoginComponent.jsx","routes/Routes.jsx","App.jsx","index.js"],"names":["SPREADSHEET_ID","RANGES","borderStyle","style","width","color","red","green","blue","borderFormatting","bothVertical","left","right","bothHorizontal","top","bottom","allSides","createSpreadsheet","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","name","createResponse","wrap","_context","prev","next","window","gapi","client","sheets","spreadsheets","create","resource","properties","title","sent","abrupt","stop","_x","apply","arguments","copySheet","_ref2","_callee2","destinationSpreadsheetId","sourceSpreadsheetId","sheetId","response","_context2","copyTo","spreadsheetId","_x2","_x3","_x4","batchUpdate","_ref3","_callee3","data","_context3","requests","then","console","log","catch","error","_x5","_x6","downloadSheet","_ref4","_callee4","downloadLink","_context4","concat","open","_x7","_x8","numberToWords","number","unitsMap","tensMap","convertThreeDigit","num","hundreds","Math","floor","twoDigit","result","tens","units","convertTwoDigit","groups","push","suffixes","words","i","length","group","trim","createSheetPayload","payload","totalAmount","products","map","product","Number","quantity","price","gstAmount","toFixed","totalAmountWithGst","roundedTotalAmountWithGst","round","roundOff","totalAmountInWords","productListCells","index","_product$hsn","hsn","_product$hsn2","startRowIndex","updateCells","range","endRowIndex","startColumnIndex","endColumnIndex","fields","rows","values","userEnteredValue","stringValue","String","userEnteredFormat","borders","numberValue","customerName","customerAddress","customerGst","customerState","invoiceNumber","invoiceDate","_objectSpread","_toConsumableArray","useSheets","newSpreadsheetId","navigate","useNavigate","useEffect","updateSheet","createCopyInvoiceTemplate","update","copySpreadsheetId","valueInputOption","updatedCells","createInvoice","copiedSheetResponse","fetchCustomers","updateValues","get","customersList","customer","id","address","gstNumber","state","fetchProducts","productsList","label","fetchInvoiceNumber","useAuth","_useState","useState","_useState2","_slicedToArray","setLoggedIn","login","load","init","apiKey","clientId","discoveryDocs","scope","plugin_name","auth2","getAuthInstance","isSignedIn","signIn","t0","logout","signOut","user","StyledNavLink","styled","NavLink","theme","textDecoration","textTransform","MenuList","_jsx","List","children","value","isAction","item","to","ListItem","disablePadding","onClick","ListItemText","Typography","variant","StyledMenuPaper","Paper","background","borderRadius","padding","Menu","elevation","MainLayout","rightComponent","useTheme","isBrowser","useMediaQuery","breakpoints","up","Box","display","justifyContent","alignItems","height","flex","_jsxs","Grid","container","sx","mt","xs","md","xl","pl","pr","ml","pb","validationSchema","Yup","shape","required","selectedCustomer","of","positive","min","InvoiceForm","_formik$values$select","customers","setCustomers","_useState3","_useState4","setProductsList","_useSheets","formik","setFieldValue","useFormik","initialValues","onSubmit","handleProductChange","field","updatedProducts","getOptionLabel","option","_option$label","handleSubmit","flexDirection","spacing","TextField","type","onChange","handleChange","onBlur","handleBlur","InputLabelProps","shrink","touched","errors","FormControl","minWidth","InputLabel","Select","labelId","event","target","MenuItem","Autocomplete","options","freeSolo","onInputChange","e","renderInput","params","CancelRoundedIcon","splice","handleDeleteProduct","AddCircleOutlineOutlinedIcon","marginTop","Button","_Fragment","LoginComponent","size","Routes","Route","path","element","App","router","createBrowserRouter","createRoutesFromElements","basename","CssBaseline","RouterProvider","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.0385afcb.chunk.js","sourcesContent":["export const CLIENT_ID =\r\n  \"106800480963-2brh49tiunu5shtuac8u3ojavj96qjcq.apps.googleusercontent.com\";\r\nexport const API_KEY = \"AIzaSyASjytXBD7oy-7P-6h4vS37rTyOIFEtMTo\";\r\nexport const SCOPES = \"https://www.googleapis.com/auth/spreadsheets.readonly\";\r\nexport const SPREADSHEET_ID = \"14zYQVENvbZxfaLFHrFjebrI6CEioJGY0lDygr5yXl80\";\r\nexport const DISCOVERY_DOCS = [\r\n  \"https://sheets.googleapis.com/$discovery/rest?version=v4\",\r\n];\r\nexport const SCOPE = \"https://www.googleapis.com/auth/spreadsheets\";\r\nexport const PLUGIN_NAME = \"invoicee\";\r\nexport const INVOICE_TEMPLATE_ID = \"1653630901\";\r\nexport const RANGES = {\r\n  CUSTOMERS: \"Customers!A5:E\",\r\n  PRODUCTS: \"Products!B5:B\",\r\n  CUSTOMER_NAME: \"Invoice!B9\",\r\n  CUSTOMER_ADDRESS: \"Invoice!B10\",\r\n  CUSTOMER_GST: \"Invoice!C13\",\r\n  CUSTOMER_STATE: \"Invoice!C14\",\r\n  INVOICE_NUMBER: \"Invoice!H8\",\r\n  INVOICE_DATE: \"Invoice!H9\",\r\n  PRODUCTS_LIST: \"Invoice!B16:J\",\r\n  CURRENT_INVOICE_NUMBER: \"Customers!H4\",\r\n};\r\n\r\nexport const borderStyle = {\r\n  style: \"SOLID\",\r\n  width: 1,\r\n  color: {\r\n    red: 0,\r\n    green: 0,\r\n    blue: 0,\r\n  },\r\n};\r\n\r\nexport const borderFormatting = {\r\n  bothVertical: {\r\n    left: borderStyle,\r\n    right: borderStyle,\r\n  },\r\n  bothHorizontal: {\r\n    top: borderStyle,\r\n    bottom: borderStyle,\r\n  },\r\n  allSides: {\r\n    top: borderStyle,\r\n    bottom: borderStyle,\r\n    left: borderStyle,\r\n    right: borderStyle,\r\n  },\r\n  top: {\r\n    top : borderStyle,\r\n  },\r\n  left: {\r\n    left: borderStyle,\r\n  },\r\n  right: {\r\n    right: borderStyle,\r\n  },\r\n  bottom: {\r\n    bottom: borderStyle,\r\n  },\r\n};\r\n","export const createSpreadsheet = async (name) => {\r\n  // Create a copy of the invoice template\r\n  const createResponse = await window.gapi.client.sheets.spreadsheets.create({\r\n    resource: {\r\n      properties: {\r\n        title: name,\r\n      },\r\n    },\r\n  });\r\n  return createResponse;\r\n};\r\n\r\nexport const copySheet = async (\r\n  destinationSpreadsheetId,\r\n  sourceSpreadsheetId,\r\n  sheetId\r\n) => {\r\n  const response = await window.gapi.client.sheets.spreadsheets.sheets.copyTo({\r\n    spreadsheetId: sourceSpreadsheetId,\r\n    sheetId: sheetId,\r\n    resource: {\r\n      destinationSpreadsheetId: destinationSpreadsheetId,\r\n    },\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const batchUpdate = async (spreadsheetId, data) => {\r\n  const response = await window.gapi.client.sheets.spreadsheets\r\n    .batchUpdate({\r\n      spreadsheetId: spreadsheetId,\r\n      resource: {\r\n        requests: data,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      console.log(\"Batch update successful\");\r\n     \r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error performing batch update: \", error);\r\n    });\r\n    return response;\r\n};\r\n\r\nexport const downloadSheet = async (spreadsheetId, sheetId) => {\r\n  const downloadLink = `https://docs.google.com/spreadsheets/d/${spreadsheetId}/export?exportFormat=pdf&gid=${sheetId}`;\r\n  window.open(downloadLink, \"_blank\");\r\n}\r\n\r\nexport const getBorders = async (spreadsheetId ,sheetId, data) => {\r\n  // Get the existing borders of the copied sheet\r\n  const getBordersRequest = {\r\n    spreadsheetId: spreadsheetId,\r\n    ranges: ['Invoice!A1:K50'],\r\n    fields: 'sheets.data.rowData.values.effectiveFormat.borders',\r\n  };\r\n  console.log(\"in the function -> \" + data)\r\n  await window.gapi.client.sheets.spreadsheets.get(getBordersRequest).then((response, ) => {\r\n    const borders = response.result.sheets[0].data[0].rowData[0].values[0].effectiveFormat.borders;\r\n    \r\n    // Include the existing borders in the requests array\r\n    data.push({\r\n      updateBorders: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex: 0,\r\n          endRowIndex: data.length,\r\n          startColumnIndex: 0,\r\n          endColumnIndex: data[0].length,\r\n        },\r\n        top: borders.top,\r\n        bottom: borders.bottom,\r\n        left: borders.left,\r\n        right: borders.right,\r\n        innerHorizontal: borders.innerHorizontal,\r\n        innerVertical: borders.innerVertical,\r\n      },\r\n    });\r\n  });\r\n  return data;\r\n\r\n}\r\n\r\n\r\n\r\nexport const deleteSpreadsheetByName = async (spreadsheetName) => {\r\n  // Retrieve a list of spreadsheets\r\n  const response = await window.gapi.client.sheets.spreadsheets.list();\r\n  const spreadsheets = response.result.files;\r\n\r\n  // Find the spreadsheet by its name\r\n  const spreadsheet = spreadsheets.find((sheet) => sheet.name === spreadsheetName);\r\n  console.log(spreadsheet);\r\n  if (spreadsheet) {\r\n    const spreadsheetId = spreadsheet.id;\r\n\r\n    // Create the delete request\r\n    const deleteRequest = {\r\n      spreadsheetId: spreadsheetId,\r\n      resource: {\r\n        requests: [\r\n          {\r\n            deleteSheet: {\r\n              sheetId: 0, // Delete the first sheet (assuming it's the only sheet)\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    try {\r\n      // Send the delete request to delete the spreadsheet\r\n      // await window.gapi.client.sheets.spreadsheets.batchUpdate(deleteRequest);\r\n\r\n      console.log(`Spreadsheet \"${spreadsheetName}\" has been deleted.`);\r\n    } catch (error) {\r\n      console.error('Error deleting the spreadsheet:', error);\r\n    }\r\n  } else {\r\n    console.log(`Spreadsheet \"${spreadsheetName}\" not found.`);\r\n  }\r\n};\r\n","import { borderFormatting } from \"./constants\";\r\n\r\nexport const capitalizeSentence = (sentence) => {\r\n  // Split the sentence into an array of words\r\n  const words = sentence.split(\" \");\r\n\r\n  // Capitalize the first letter of each word\r\n  const capitalizedWords = words.map((word) => {\r\n    // Capitalize the first letter of the word and make the rest lowercase\r\n    const capitalizedWord = word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\r\n    return capitalizedWord;\r\n  });\r\n\r\n  // Join the capitalized words back into a sentence\r\n  const capitalizedSentence = capitalizedWords.join(\" \");\r\n\r\n  return capitalizedSentence;\r\n}\r\n\r\nexport const numberToWords = (number) => {\r\n  const unitsMap = [\r\n    'Zero', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine',\r\n    'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\r\n  ];\r\n\r\n  const tensMap = [\r\n    '', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'\r\n  ];\r\n\r\n  const convertTwoDigit = (num) => {\r\n    if (num < 20) {\r\n      return unitsMap[num];\r\n    } else {\r\n      const tens = Math.floor(num / 10);\r\n      const units = num % 10;\r\n      return tensMap[tens] + (units !== 0 ? ' ' + unitsMap[units] : '');\r\n    }\r\n  };\r\n\r\n  const convertThreeDigit = (num) => {\r\n    const hundreds = Math.floor(num / 100);\r\n    const twoDigit = num % 100;\r\n    let result = '';\r\n    if (hundreds !== 0) {\r\n      result += unitsMap[hundreds] + ' Hundred';\r\n      if (twoDigit !== 0) {\r\n        result += ' and ';\r\n      }\r\n    }\r\n    if (twoDigit !== 0) {\r\n      result += convertTwoDigit(twoDigit);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  if (number === 0) {\r\n    return unitsMap[number];\r\n  }\r\n\r\n  const groups = [];\r\n  while (number > 0) {\r\n    groups.push(number % 1000);\r\n    number = Math.floor(number / 1000);\r\n  }\r\n\r\n  const suffixes = ['', ' Thousand', ' Lakh', ' Crore'];\r\n  let words = '';\r\n  for (let i = groups.length - 1; i >= 0; i--) {\r\n    const group = groups[i];\r\n    if (group !== 0) {\r\n      const groupWords = convertThreeDigit(group);\r\n      words += groupWords + suffixes[i] + ' ';\r\n    }\r\n  }\r\n\r\n  return words.trim();\r\n};\r\n\r\nexport const createSheetPayload = (payload, sheetId) => {\r\n  let totalAmount = 0;\r\n  payload.products.map((product) => {\r\n    totalAmount += Number(product.quantity) * Number(product.price);\r\n  });\r\n\r\n  const gstAmount = (totalAmount * 0.09).toFixed(2);\r\n  const totalAmountWithGst = totalAmount + gstAmount * 2;\r\n  const roundedTotalAmountWithGst = Math.round(totalAmountWithGst).toFixed(2);\r\n  const roundOff = (roundedTotalAmountWithGst - totalAmountWithGst).toFixed(2);\r\n  const totalAmountInWords = \r\n    numberToWords(roundedTotalAmountWithGst, { currency: true })\r\n  const productsList = payload.products.map((product, index) => {\r\n    return [\r\n      index + 1,\r\n      product.name,\r\n      product.hsn ?? \"NA\",\r\n      product.quantity,\r\n      product.price,\r\n      product.quantity * product.price,\r\n    ];\r\n  });\r\n\r\n  const products = payload.products; // Assuming you have an array of products\r\n\r\n  const productListCells = products.map((product, index) => {\r\n    const startRowIndex = 14 + index; // Adjust the startRowIndex based on the desired starting row for the products\r\n    const endRowIndex = startRowIndex + 1;\r\n    return {\r\n      updateCells: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex,\r\n          endRowIndex,\r\n          startColumnIndex: 1,\r\n          endColumnIndex: 10,\r\n        },\r\n        fields: \"*\",\r\n        rows: [\r\n          {\r\n            values: [\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: String(index + 1),\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.bothVertical\r\n                }\r\n              },\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: product.name,\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.bothVertical\r\n                }\r\n              },\r\n              {},\r\n              {},\r\n              {},\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: product.hsn ?? \"NA\",\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.bothVertical\r\n                }\r\n              },\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: product.quantity,\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.bothVertical\r\n                }\r\n              },\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: product.price,\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.bothVertical\r\n                }\r\n              },\r\n              {\r\n                userEnteredValue: {\r\n                  numberValue: product.quantity * product.price,\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.bothVertical\r\n                }\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  });\r\n\r\n  return [\r\n    {\r\n      updateCells: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex: 8,\r\n          endRowIndex: 9,\r\n          startColumnIndex: 1,\r\n          endColumnIndex: 2,\r\n        },\r\n        fields: \"*\",\r\n        rows: [\r\n          {\r\n            values: [\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: payload.customerName,\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.left,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      updateCells: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex: 9,\r\n          endRowIndex: 10,\r\n          startColumnIndex: 1,\r\n          endColumnIndex: 2,\r\n        },\r\n        fields: \"*\",\r\n        rows: [\r\n          {\r\n            values: [\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: payload.customerAddress,\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.left,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      updateCells: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex: 11,\r\n          endRowIndex: 12,\r\n          startColumnIndex: 2,\r\n          endColumnIndex: 3,\r\n        },\r\n        fields: \"*\",\r\n        rows: [\r\n          {\r\n            values: [\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: payload.customerGst,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      updateCells: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex: 12,\r\n          endRowIndex: 13,\r\n          startColumnIndex: 2,\r\n          endColumnIndex: 3,\r\n        },\r\n        fields: \"*\",\r\n        rows: [\r\n          {\r\n            values: [\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: payload.customerState,\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.bottom,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      updateCells: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex: 7,\r\n          endRowIndex: 8,\r\n          startColumnIndex: 7,\r\n          endColumnIndex: 8,\r\n        },\r\n        fields: \"*\",\r\n        rows: [\r\n          {\r\n            values: [\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: String(payload.invoiceNumber),\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.top,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      updateCells: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex: 8,\r\n          endRowIndex: 9,\r\n          startColumnIndex: 7,\r\n          endColumnIndex: 8,\r\n        },\r\n        fields: \"*\",\r\n        rows: [\r\n          {\r\n            values: [\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: payload.invoiceDate,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      updateCells: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex: 24,\r\n          endRowIndex: 25,\r\n          startColumnIndex: 9,\r\n          endColumnIndex: 10,\r\n        },\r\n        fields: \"*\",\r\n        rows: [\r\n          {\r\n            values: [\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: String(totalAmount),\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.bothVertical,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      updateCells: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex: 25,\r\n          endRowIndex: 26,\r\n          startColumnIndex: 9,\r\n          endColumnIndex: 10,\r\n        },\r\n        fields: \"*\",\r\n        rows: [\r\n          {\r\n            values: [\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: String(gstAmount),\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.bothVertical,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      updateCells: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex: 26,\r\n          endRowIndex: 27,\r\n          startColumnIndex: 9,\r\n          endColumnIndex: 10,\r\n        },\r\n        fields: \"*\",\r\n        rows: [\r\n          {\r\n            values: [\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: String(gstAmount),\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.bothVertical,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      updateCells: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex: 27,\r\n          endRowIndex: 28,\r\n          startColumnIndex: 9,\r\n          endColumnIndex: 10,\r\n        },\r\n        fields: \"*\",\r\n        rows: [\r\n          {\r\n            values: [\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: String(roundOff),\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.bothVertical,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      updateCells: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex: 28,\r\n          endRowIndex:29,\r\n          startColumnIndex: 9,\r\n          endColumnIndex: 10,\r\n        },\r\n        fields: \"*\",\r\n        rows: [\r\n          {\r\n            values: [\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: String(roundedTotalAmountWithGst),\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: borderFormatting.bothVertical,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      updateCells: {\r\n        range: {\r\n          sheetId: sheetId,\r\n          startRowIndex: 31,\r\n          endRowIndex: 32,\r\n          startColumnIndex: 1,\r\n          endColumnIndex: 2,\r\n        },\r\n        fields: \"*\",\r\n        rows: [\r\n          {\r\n            values: [\r\n              {\r\n                userEnteredValue: {\r\n                  stringValue: \"INR \" + String(totalAmountInWords) + \" Only\",\r\n                },\r\n                userEnteredFormat: {\r\n                  borders: {\r\n                    ...borderFormatting.bothHorizontal,\r\n                    ...borderFormatting.left,\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    ...productListCells,\r\n  ];\r\n};","import { useEffect } from \"react\";\r\nimport {\r\n  SPREADSHEET_ID,\r\n  RANGES,\r\n  INVOICE_TEMPLATE_ID,\r\n} from \"../../helpers/constants.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  batchUpdate,\r\n  copySheet,\r\n  createSpreadsheet,\r\n  downloadSheet,\r\n  getBorders,\r\n} from \"./sheetsFunctions.js\";\r\nimport { createSheetPayload } from \"../../helpers/helper.js\";\r\n\r\nconst useSheets = () => {\r\n  const navigate = useNavigate();\r\n  let newSpreadsheetId;\r\n  useEffect(() => {\r\n    if (!window.gapi.client) {\r\n      navigate(\"/\");\r\n    }\r\n  });\r\n  const updateSheet = async (payload) => {\r\n    // Update the values in the Google Sheet\r\n    const range = RANGES.CUSTOMERS;\r\n    createCopyInvoiceTemplate(payload);\r\n    const response = await window.gapi.client.sheets.spreadsheets.values.update(\r\n      {\r\n        copySpreadsheetId,\r\n        range,\r\n        valueInputOption: \"USER_ENTERED\",\r\n        resource: {\r\n          values,\r\n        },\r\n      }\r\n    );\r\n    console.log(response);\r\n    console.log(`${response.result.updatedCells} cells updated.`);\r\n  };\r\n\r\n  const createInvoice = async (payload) => {\r\n    // Update the values in the Google Sheet\r\n    const copyResponse = createCopyInvoiceTemplate(payload);\r\n  };\r\n\r\n  const fetchCustomers = (updateValues) => {\r\n\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: SPREADSHEET_ID,\r\n        range: RANGES.CUSTOMERS,\r\n      })\r\n      .then((response) => {\r\n        const values = response.result.values;\r\n        const customersList = values.map((customer) => {\r\n          return {\r\n            id: customer[0],\r\n            name: customer[1],\r\n            address: customer[2],\r\n            gstNumber: customer[3],\r\n            state: customer[4],\r\n          };\r\n        });\r\n        updateValues(customersList);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error retrieving spreadsheet values:\", error);\r\n      });\r\n  };\r\n\r\n  const fetchProducts = (updateValues) => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: SPREADSHEET_ID,\r\n        range: RANGES.PRODUCTS,\r\n      })\r\n      .then((response) => {\r\n        const values = response.result.values;\r\n        const productsList = values.map((product) => {\r\n          return {\r\n            label: product[0],\r\n          };\r\n        });\r\n        updateValues(productsList);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error retrieving spreadsheet values:\", error);\r\n      });\r\n  };\r\n\r\n  const fetchInvoiceNumber = (updateValues) => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: SPREADSHEET_ID,\r\n        range: RANGES.CURRENT_INVOICE_NUMBER,\r\n      })\r\n      .then((response) => {\r\n        const values = response.result.values;\r\n        const invoiceNumber = values[0][0];\r\n        updateValues(Number(invoiceNumber) + 1);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error retrieving spreadsheet values:\", error);\r\n      });\r\n  };\r\n\r\n  const createCopyInvoiceTemplate = async (payload) => {\r\n    const createResponse = await createSpreadsheet(\"New sheet\");\r\n    newSpreadsheetId = createResponse.result.spreadsheetId;\r\n    const copiedSheetResponse = await copySheet(\r\n      newSpreadsheetId,\r\n      SPREADSHEET_ID,\r\n      INVOICE_TEMPLATE_ID\r\n    );\r\n    var data = createSheetPayload(payload, copiedSheetResponse.result.sheetId);\r\n    const updateResponse = await batchUpdate(newSpreadsheetId, data);\r\n    downloadSheet(newSpreadsheetId, copiedSheetResponse.result.sheetId);\r\n    return createResponse;\r\n  };\r\n\r\n  return {\r\n    updateSheet,\r\n    fetchCustomers,\r\n    fetchProducts,\r\n    fetchInvoiceNumber,\r\n    createInvoice,\r\n  };\r\n};\r\n\r\nexport default useSheets;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { API_KEY, CLIENT_ID } from \"../../helpers/constants\";\r\n\r\nconst useAuth = () => {\r\n  const user = {};\r\n  const navigate = useNavigate();\r\n  const [isLoggedIn, setLoggedIn] = useState(false);\r\n\r\n  const login = async () => {\r\n    console.log(\"logging in\")\r\n    await window.gapi.load(\"client\", async () => {\r\n      try {\r\n        await window.gapi.client.init({\r\n          apiKey: API_KEY,\r\n          clientId: CLIENT_ID,\r\n          discoveryDocs: [\r\n            \"https://sheets.googleapis.com/$discovery/rest?version=v4\",\r\n          ],\r\n          scope: \"https://www.googleapis.com/auth/spreadsheets\",\r\n          plugin_name: \"invoicee\",\r\n        });\r\n        const isLoggedIn = await window.gapi.auth2\r\n          .getAuthInstance()\r\n          .isSignedIn.get();\r\n        if (!isLoggedIn) {\r\n          const response = await window.gapi.auth2.getAuthInstance().signIn();\r\n          console.log(response);\r\n        } else {\r\n          setLoggedIn(true);\r\n        }\r\n        navigate(\"/create-invoice\");\r\n      } catch (error) {\r\n        console.error(\"Error updating Google Sheet:\", error);\r\n      }\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    const auth2 = window.gapi.auth2.getAuthInstance();\r\n    auth2.signOut().then(() => {\r\n      console.log(\"User signed out.\");\r\n      navigate(\"/\");\r\n    });\r\n  };\r\n\r\n  return {\r\n    login,\r\n    logout,\r\n    user,\r\n  };\r\n};\r\n\r\nexport default useAuth;\r\n","import { List, ListItem, ListItemText, Typography, styled } from \"@mui/material\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport useAuth from \"../features/login/useAuth\";\r\n\r\nconst StyledNavLink = styled(NavLink)(({ theme }) => ({\r\n  textDecoration: \"none\",\r\n  textTransform: \"none\",\r\n}));\r\n\r\nconst MenuList = () => {\r\n  const {logout} = useAuth();\r\n  const MENU_ITEMS = [\r\n    {\r\n      label: \"Create Invoice\",\r\n      value: \"/create-invoice\",\r\n    },\r\n    {\r\n      label: \"View Invoices\",\r\n      value: \"/view-invoices\",\r\n    },\r\n    {\r\n      label: \"Logout\",\r\n      value: \"logout\",\r\n      isAction: true,\r\n    }\r\n  ];\r\n\r\n  const handleLogout = () => {\r\n    // Perform your logout logic here\r\n    // For example, redirect to the login page or clear session data\r\n    console.log(\"Logout clicked\");\r\n    logout();\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      {MENU_ITEMS.map((item, index) => (\r\n        <StyledNavLink to={item.value} key={index}>\r\n          <ListItem disablePadding onClick={item.isAction ? logout : null}>\r\n            <ListItemText>\r\n              <Typography variant=\"h6\" color={\"common.white\"} >{item.label}</Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n        </StyledNavLink>\r\n      ))}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default MenuList;\r\n","import { Paper, styled } from \"@mui/material\";\r\nimport MenuList from \"./MenuList\";\r\n\r\nconst StyledMenuPaper = styled(Paper)(({ theme }) => ({\r\n  background: \"linear-gradient(180deg, #005C97 19.46%, #363795 122.95%)\",\r\n  borderRadius: \"20px\",\r\n  padding: \"30px 0px\",\r\n}));\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <StyledMenuPaper elevation={1}>\r\n      <MenuList />\r\n    </StyledMenuPaper>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport { Box, Grid, useMediaQuery, useTheme } from \"@mui/material\";\r\n\r\nconst MainLayout = ({ rightComponent }) => {\r\n  const theme = useTheme();\r\n  const isBrowser = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      height=\"100vh\"\r\n      width=\"100vw\"\r\n    >\r\n      <Box style={{ flex: 1 }}>\r\n        <Grid container sx={{ mt: { xs: -5, md: -12 }, flex: 1 }}>\r\n          {isBrowser && (\r\n            <Grid item md={4} xl={3} sx={{ pl: 5, pr: 5 }}>\r\n              <Menu />\r\n            </Grid>\r\n          )}\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={8}\r\n            xl={9}\r\n            sx={{\r\n              pr: { xs: 2, md: 5 },\r\n              ml: { xs: 2, md: 0 },\r\n            }}\r\n          >\r\n            <Grid item container xs={12}>\r\n              {rightComponent ? (\r\n                <Grid item xs={12}>\r\n                  {rightComponent}\r\n                </Grid>\r\n              ) : (\r\n                <Grid item xs={12} sx={{ pb: 4 }}>\r\n                  {\" \"}\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  invoiceDate: Yup.date().required('Invoice Date is required'),\r\n  invoiceNumber: Yup.string().required('Invoice Number is required'),\r\n  selectedCustomer: Yup.object().shape({\r\n    name: Yup.string().required('Customer Name is required'),\r\n    address: Yup.string().required('Customer Address is required'),\r\n    gstNumber: Yup.string().required('Customer GST Number is required'),\r\n    state: Yup.string().required('Customer State is required'),\r\n  }),\r\n  products: Yup.array().of(\r\n    Yup.object().shape({\r\n      name: Yup.string().required('Product Name is required'),\r\n      quantity: Yup.number().required('Quantity is required').positive('Quantity must be a positive number'),\r\n      price: Yup.number().required('Price is required').positive('Price must be a positive number'),\r\n    })\r\n  ).min(1, 'At least one product is required'),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Autocomplete,\r\n  Grid,\r\n  Box,\r\n  Fab,\r\n} from \"@mui/material\";\r\nimport useSheets from \"./useSheets\";\r\nimport MainLayout from \"../../components/MainLayout\";\r\nimport AddCircleOutlineOutlinedIcon from \"@mui/icons-material/AddCircleOutlineOutlined\";\r\nimport CancelRoundedIcon from \"@mui/icons-material/CancelRounded\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport validationSchema from \"../../schemas/invoiceValidation\";\r\n\r\nconst InvoiceForm = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [productsList, setProductsList] = useState([]);\r\n  const { updateSheet, fetchCustomers, fetchProducts, fetchInvoiceNumber, createInvoice } =\r\n    useSheets();\r\n\r\n  useEffect(() => {\r\n    fetchCustomers((values) => setCustomers(values));\r\n    fetchProducts((values) => setProductsList(values));\r\n    fetchInvoiceNumber((values) => formik.setFieldValue(\"invoiceNumber\", values));\r\n    // updateSheet(spreadsheetId, range, values);\r\n  }, []);\r\n\r\n  const initialValues = {\r\n    invoiceDate: \"\",\r\n    invoiceNumber: 0,\r\n    selectedCustomer: null,\r\n    products: [{ name: \"\", quantity: 0, price: 0 }],\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    const payload = {\r\n      invoiceNumber: values.invoiceNumber,\r\n      invoiceDate: values.invoiceDate,\r\n      customerName: values.selectedCustomer.name,\r\n      customerAddress: values.selectedCustomer.address,\r\n      customerGst: values.selectedCustomer.gstNumber,\r\n      customerState: values.selectedCustomer.state,\r\n      products: values.products,\r\n    };\r\n    // updateSheet(payload);\r\n    createInvoice(payload);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit: handleSubmit,\r\n    validationSchema,\r\n  });\r\n\r\n  const handleCustomerSelection = (event) => {\r\n    formik.setFieldValue(\"selectedCustomer\", event.target.value);\r\n  };\r\n\r\n  const handleAddProduct = () => {\r\n    formik.setFieldValue(\"products\", [\r\n      ...formik.values.products,\r\n      { name: \"\", quantity: 0, price: 0 },\r\n    ]);\r\n  };\r\n\r\n  const handleProductChange = (index, field, value) => {\r\n    const updatedProducts = [...formik.values.products];\r\n    updatedProducts[index][field] = value;\r\n    formik.setFieldValue(\"products\", updatedProducts);\r\n  };\r\n\r\n  const handleDeleteProduct = (index) => {\r\n    const updatedProducts = [...formik.values.products];\r\n    updatedProducts.splice(index, 1);\r\n    formik.setFieldValue(\"products\", updatedProducts);\r\n  };\r\n\r\n  const getOptionLabel = (option) => option?.label ?? \"\";\r\n\r\n  const rightComponent = (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Grid item container flexDirection={\"column\"} spacing={2} xs={5}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\">Pranesh Enterprises</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\">Invoice</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"invoiceDate\"\r\n            label=\"Invoice Date\"\r\n            type=\"date\"\r\n            value={formik.values.invoiceDate}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          {formik.touched.invoiceDate && formik.errors.invoiceDate && (\r\n            <Typography color=\"error\">{formik.errors.invoiceDate}</Typography>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"invoiceNumber\"\r\n            label=\"Invoice Number\"\r\n            value={formik.values.invoiceNumber}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.touched.invoiceNumber && formik.errors.invoiceNumber && (\r\n            <Typography color=\"error\">{formik.errors.invoiceNumber}</Typography>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl sx={{ minWidth: 200 }}>\r\n            <InputLabel id=\"customer-name-label\">Customer Name</InputLabel>\r\n            <Select\r\n              labelId=\"customer-name-label\"\r\n              id=\"customer-name\"\r\n              value={formik.values.selectedCustomer ?? \"\"}\r\n              onChange={handleCustomerSelection}\r\n              onBlur={formik.handleBlur}\r\n            >\r\n              {customers.map((customer) => (\r\n                <MenuItem key={customer.id} value={customer}>\r\n                  {customer.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            {formik.touched.selectedCustomer && formik.errors.selectedCustomer && (\r\n              <Typography color=\"error\">{formik.errors.selectedCustomer.name}</Typography>\r\n            )}\r\n          </FormControl>\r\n        </Grid>\r\n        {formik.values.products.map((product, index) => (\r\n          <Grid item container spacing={2} key={index} flexDirection={\"row\"}>\r\n            <Grid item xs={5}>\r\n              <Autocomplete\r\n                id={`product-name-${index}`}\r\n                options={productsList}\r\n                freeSolo\r\n                getOptionLabel={getOptionLabel}\r\n                onInputChange={(e, value) => {\r\n                  value\r\n                    ? handleProductChange(index, \"name\", value)\r\n                    : handleProductChange(index, \"name\", \"\");\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Product Name\"\r\n                    value={product.name}\r\n                    onChange={(e) =>\r\n                      handleProductChange(index, \"name\", e.target.value)\r\n                    }\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n                )}\r\n              />\r\n              {formik.touched.products && formik.errors.products && formik.errors.products[index] && (\r\n                <Typography color=\"error\">{formik.errors.products[index].name}</Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <TextField\r\n                id={`quantity-${index}`}\r\n                label=\"Quantity\"\r\n                type=\"number\"\r\n                value={product.quantity}\r\n                onChange={(e) =>\r\n                  handleProductChange(index, \"quantity\", e.target.value)\r\n                }\r\n                onBlur={formik.handleBlur}\r\n              />\r\n              {formik.touched.products && formik.errors.products && formik.errors.products[index] && (\r\n                <Typography color=\"error\">{formik.errors.products[index].quantity}</Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <TextField\r\n                id={`price-${index}`}\r\n                label=\"Price\"\r\n                type=\"number\"\r\n                value={product.price}\r\n                onChange={(e) =>\r\n                  handleProductChange(index, \"price\", e.target.value)\r\n                }\r\n                onBlur={formik.handleBlur}\r\n              />\r\n              {formik.touched.products && formik.errors.products && formik.errors.products[index] && (\r\n                <Typography color=\"error\">{formik.errors.products[index].price}</Typography>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item xs={1} display={\"flex\"} alignItems={\"center\"}>\r\n              <CancelRoundedIcon\r\n                onClick={(e) => handleDeleteProduct(index)}\r\n                xs={1}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          display={\"flex\"}\r\n          alignItems={\"center\"}\r\n          justifyContent={\"center\"}\r\n        >\r\n          <AddCircleOutlineOutlinedIcon onClick={handleAddProduct} />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          display={\"flex\"}\r\n          marginTop={2}\r\n          alignItems={\"center\"}\r\n          justifyContent={\"center\"}\r\n        >\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\">\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MainLayout rightComponent={rightComponent} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvoiceForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CLIENT_ID, API_KEY } from \"../../helpers/constants\";\r\nimport useAuth from \"./useAuth\";\r\nimport { Box, Button } from \"@mui/material\";\r\n\r\nconst LoginComponent = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const { login } = useAuth();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"success\"\r\n        size=\"large\"\r\n        onClick={() => login()}\r\n      >\r\n        Login\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginComponent;\r\n","import {Route} from 'react-router-dom';\r\nimport InvoiceForm from '../features/createInvoice/InvoiceForm';\r\nimport LoginComponent from '../features/login/LoginComponent';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <>\r\n      <Route path=\"/\" element={<LoginComponent />}></Route>\r\n      <Route path=\"/create-invoice\" element={<InvoiceForm />}></Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Routes;","import React, { useState, useEffect } from \"react\";\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport {\r\n  createBrowserRouter,\r\n  createRoutesFromElements,\r\n  RouterProvider,\r\n} from \"react-router-dom\";\r\nimport Routes from \"./routes/Routes\";\r\n\r\nconst App = () => {\r\n  const router = createBrowserRouter(createRoutesFromElements(Routes()), {\r\n    basename: \"\",\r\n  });\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <RouterProvider router={router} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}